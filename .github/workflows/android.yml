name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Detect changes
      uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          src:
            - 'app/build.gradle'

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        sdk-tools-version: 'commandlinetools-linux-11076708_latest'  # 2025 年最新，支持 SDK 36

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Retrieve version name
      run: echo "VERSION_NAME=$(date "+%Y%m%d")_$(echo ${{ github.sha }} | head -c 7)" >> $GITHUB_ENV

    - name: Retrieve version code
      run: echo "VERSION_CODE=$(grep -oP 'versionCode\s+\K\d+' ${{ github.workspace }}/app/build.gradle)" >> $GITHUB_ENV

    - name: Set version name
      run: sed -i "s/versionName \".*\"/versionName \"${{ env.VERSION_NAME }}\"/g" ${{ github.workspace }}/app/build.gradle

    - name: Build with Gradle
      run: ./gradlew assembleRelease --stacktrace  # 添加 --stacktrace 便于日志诊断

    - name: Debug: List APK outputs
      run: |
        echo "=== APK Directory Contents ==="
        ls -la ${{ github.workspace }}/app/build/outputs/apk/ || echo "No APK outputs found!"
        ls -la ${{ github.workspace }}/app/build/outputs/apk/release/ 2>/dev/null || echo "Release directory missing - check build errors above"

    - name: Setup build tool version variable
      shell: bash
      run: |
        BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n 1 | grep -E '^[0-9]+(\.[0-9]+){2,3}$')  # 精确匹配版本
        echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
        echo "Last build tool version is: $BUILD_TOOL_VERSION"

    - name: Check if APK exists
      id: apk-check
      run: |
        if [ -f "${{ github.workspace }}/app/build/outputs/apk/release/app-release.apk" ] || [ -f "${{ github.workspace }}/app/build/outputs/apk/release/app-release-unsigned.apk" ]; then
          echo "apk_exists=true" >> $GITHUB_ENV
        else
          echo "apk_exists=false" >> $GITHUB_ENV
        fi

    - name: Sign APK
      if: env.apk_exists == 'true'
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: ${{ github.workspace }}/app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNINGKEYBASE64 }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEYSTOREPASSWORD }}
        keyPassword: ${{ secrets.KEYPASSWORD }}
      env:
        BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}

    - name: Rename APK
      if: env.apk_exists == 'true'
      run: |
        if [ -f "${{ github.workspace }}/app/build/outputs/apk/release/app-release-signed.apk" ]; then
          mv ${{ github.workspace }}/app/build/outputs/apk/release/app-release-signed.apk ${{ github.workspace }}/app/build/outputs/apk/release/fcmfix-ci-${{ env.VERSION_NAME }}.apk
        else
          mv ${{ github.workspace }}/app/build/outputs/apk/release/app-release-unsigned-signed.apk ${{ github.workspace }}/app/build/outputs/apk/release/fcmfix-ci-${{ env.VERSION_NAME }}.apk
        fi

    - name: Upload built APK
      if: env.apk_exists == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: release
        path: ${{ github.workspace }}/app/build/outputs/apk/release/fcmfix-ci-${{ env.VERSION_NAME }}.apk

    - name: Create GitHub Release
      if: env.apk_exists == 'true'
      uses: softprops/action-gh-release@v2
      with:
        name: "Auto Release ${{ env.VERSION_NAME }}"
        tag_name: v${{ env.VERSION_CODE }}-${{ env.VERSION_NAME }}
        token: ${{ secrets.TOKEN }}
        files: |
          ${{ github.workspace }}/app/build/outputs/apk/release/fcmfix-ci-${{ env.VERSION_NAME }}.apk

    - name: Release to LSPosed Module Repository
      if: steps.changes.outputs.src == 'true' && env.apk_exists == 'true'
      uses: softprops/action-gh-release@v2
      with:
        name: "Auto Release ${{ env.VERSION_NAME }}"
        tag_name: v${{ env.VERSION_CODE }}-${{ env.VERSION_NAME }}
        repository: Xposed-Modules-Repo/com.kooritea.fcmfix
        token: ${{ secrets.TOKEN_CLASSIC }}
        files: |
          ${{ github.workspace }}/app/build/outputs/apk/release/fcmfix-ci-${{ env.VERSION_NAME }}.apk